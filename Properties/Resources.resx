<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppName" xml:space="preserve">
    <value>Mupen Toolkit</value>
  </data>
  <data name="AudioPluginName" xml:space="preserve">
    <value>Audio Plugin Name</value>
  </data>
  <data name="Australia" xml:space="preserve">
    <value>Australia</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="Beta" xml:space="preserve">
    <value>Beta</value>
  </data>
  <data name="ButtonA" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="ButtonB" xml:space="preserve">
    <value>B</value>
  </data>
  <data name="ButtonStart" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="BypassMovie" xml:space="preserve">
    <value>Bypass</value>
  </data>
  <data name="Check" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="Connected" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="Controller" xml:space="preserve">
    <value>Controller</value>
  </data>
  <data name="Controller0" xml:space="preserve">
    <value>Controller 1</value>
  </data>
  <data name="Controller1" xml:space="preserve">
    <value>Controller 2</value>
  </data>
  <data name="Controller2" xml:space="preserve">
    <value>Controller 3</value>
  </data>
  <data name="Controller3" xml:space="preserve">
    <value>Controller 4</value>
  </data>
  <data name="ControllerBoundsCheck" xml:space="preserve">
    <value>Controller Amount</value>
  </data>
  <data name="ControllerBoundsCheckDescription" xml:space="preserve">
    <value>Whether the controller amount is within logical bounds</value>
  </data>
  <data name="Controllers" xml:space="preserve">
    <value>Controllers</value>
  </data>
  <data name="CPadDown" xml:space="preserve">
    <value>Cv</value>
  </data>
  <data name="CPadLeft" xml:space="preserve">
    <value>C&lt;</value>
  </data>
  <data name="CPadRight" xml:space="preserve">
    <value>C&gt;</value>
  </data>
  <data name="CPadUp" xml:space="preserve">
    <value>C^</value>
  </data>
  <data name="Demo" xml:space="preserve">
    <value>Demo</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DPadDown" xml:space="preserve">
    <value>Dv</value>
  </data>
  <data name="DPadLeft" xml:space="preserve">
    <value>D&lt;</value>
  </data>
  <data name="DPadRight" xml:space="preserve">
    <value>D&gt;</value>
  </data>
  <data name="DPadUp" xml:space="preserve">
    <value>D^</value>
  </data>
  <data name="Evaluation" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ExitApp" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Fail" xml:space="preserve">
    <value>FAIL</value>
  </data>
  <data name="France" xml:space="preserve">
    <value>France</value>
  </data>
  <data name="Germany" xml:space="preserve">
    <value>Germany</value>
  </data>
  <data name="HeaderParseFailed" xml:space="preserve">
    <value>Failed to parse header</value>
  </data>
  <data name="InputPluginName" xml:space="preserve">
    <value>Input Plugin Name</value>
  </data>
  <data name="InputsParseFailed" xml:space="preserve">
    <value>Failed to parse inputs</value>
  </data>
  <data name="InputStatistics" xml:space="preserve">
    <value>Input Statistics</value>
  </data>
  <data name="IsABC" xml:space="preserve">
    <value>ABC-Compliant</value>
  </data>
  <data name="IsABCDescription" xml:space="preserve">
    <value>Whether this input sequence complies with A-Button-Challenge</value>
  </data>
  <data name="Italy" xml:space="preserve">
    <value>Italy</value>
  </data>
  <data name="Japan" xml:space="preserve">
    <value>Japan</value>
  </data>
  <data name="LengthSamples" xml:space="preserve">
    <value>Length (Samples)</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="loading" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\loading.gif;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="LoadLastMovie" xml:space="preserve">
    <value>Load Last Movie</value>
  </data>
  <data name="LoadMovie" xml:space="preserve">
    <value>Select Movie</value>
  </data>
  <data name="logo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\logo.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="MagicCookieCheck" xml:space="preserve">
    <value>Magic Cookie</value>
  </data>
  <data name="MagicCookieCheckDescription" xml:space="preserve">
    <value>Whether the movie's magic cookie (signature leading 4 bytes) match the M64 format convention</value>
  </data>
  <data name="Mempak" xml:space="preserve">
    <value>Mempak</value>
  </data>
  <data name="MovieDiagnosis" xml:space="preserve">
    <value>Movie Diagnosis</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoControllers" xml:space="preserve">
    <value>No Controllers connected</value>
  </data>
  <data name="NotAMovie" xml:space="preserve">
    <value>This file is not a movie</value>
  </data>
  <data name="Old Version" xml:space="preserve">
    <value />
  </data>
  <data name="Pass" xml:space="preserve">
    <value>PASS</value>
  </data>
  <data name="PasteError" xml:space="preserve">
    <value>Error when pasting. Is your clipboard content in the correct format?</value>
  </data>
  <data name="PathError" xml:space="preserve">
    <value>File unavailable</value>
  </data>
  <data name="Rerecords" xml:space="preserve">
    <value>Rerecords</value>
  </data>
  <data name="RomCountry" xml:space="preserve">
    <value>ROM Country</value>
  </data>
  <data name="RomName" xml:space="preserve">
    <value>ROM Name</value>
  </data>
  <data name="RSPPluginName" xml:space="preserve">
    <value>RSP Plugin Name</value>
  </data>
  <data name="Rumblepak" xml:space="preserve">
    <value>Rumblepak</value>
  </data>
  <data name="Sample" xml:space="preserve">
    <value>Sample</value>
  </data>
  <data name="SaveAlignment" xml:space="preserve">
    <value>Save is misaligned!</value>
  </data>
  <data name="SaveFailed" xml:space="preserve">
    <value>Failed to save</value>
  </data>
  <data name="SaveMovie" xml:space="preserve">
    <value>Save Movie</value>
  </data>
  <data name="Spain" xml:space="preserve">
    <value>Spain</value>
  </data>
  <data name="StandardVISCheck" xml:space="preserve">
    <value>Region-Conformant VI/s</value>
  </data>
  <data name="StandardVISCheckDescription" xml:space="preserve">
    <value>Whether rounded VI/s conform to either PAL/NTSC standard</value>
  </data>
  <data name="StartupTypeSanityCheck" xml:space="preserve">
    <value>Startup Type</value>
  </data>
  <data name="StartupTypeSanityCheckDescription" xml:space="preserve">
    <value>Whether the startup type is within logical bounds and known values</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value />
  </data>
  <data name="TASStudio" xml:space="preserve">
    <value>TAS Studio</value>
  </data>
  <data name="TimesPressedFormat" xml:space="preserve">
    <value>Quantity of {0} button held samples</value>
  </data>
  <data name="TimesPressedFormatShort" xml:space="preserve">
    <value>{0} held</value>
  </data>
  <data name="TooLongStringNotificationFormat" xml:space="preserve">
    <value>An inputted property "{0}" had an inappropriate length and has been truncated.</value>
  </data>
  <data name="TotalButtonPresses" xml:space="preserve">
    <value>Total Button Presses</value>
  </data>
  <data name="TotalButtonPressesDescription" xml:space="preserve">
    <value>Total Amount of buttons held on each frame</value>
  </data>
  <data name="TriggerL" xml:space="preserve">
    <value>L</value>
  </data>
  <data name="TriggerR" xml:space="preserve">
    <value>R</value>
  </data>
  <data name="TriggerZ" xml:space="preserve">
    <value>Z</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="UnloadMovie" xml:space="preserve">
    <value>Close Movie</value>
  </data>
  <data name="USA" xml:space="preserve">
    <value>USA</value>
  </data>
  <data name="USAJapan" xml:space="preserve">
    <value>USA/Japan</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="VersionCheck" xml:space="preserve">
    <value>Version Validity</value>
  </data>
  <data name="VersionCheckDescription" xml:space="preserve">
    <value>Whether the movies' version is adequate to current standard</value>
  </data>
  <data name="VIBoundsCheck" xml:space="preserve">
    <value>Bound VIs</value>
  </data>
  <data name="VIBoundsCheckDescription" xml:space="preserve">
    <value>Whether VIs are within logical bounds</value>
  </data>
  <data name="VideoPluginName" xml:space="preserve">
    <value>Video Plugin Name</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>